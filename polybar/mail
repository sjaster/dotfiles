#!/usr/bin/python

import imaplib
from subprocess import check_output
from socket import gaierror

class FSR:
    def __init__(self):
        userdata = check_output('pass mail/fsr', shell=True)
        self.passwd = str(userdata.splitlines()[0], 'utf-8')
        self.user = str(userdata.splitlines()[1], 'utf-8').split(':')[1]

    def getUnseen(self):
        try:
            obj = imaplib.IMAP4('imap.ifsr.de', 143)
        except gaierror:
            return '0'
        obj.starttls()
        obj.login(self.user, self.passwd)
        obj.select()
        return str(len(obj.search(None, 'UnSeen')[1][0].split()))

class TUD:
    def __init__(self):
        userdata = check_output('pass mail/tud', shell=True)
        self.passwd = str(userdata.splitlines()[0], 'utf-8')
        self.user = str(userdata.splitlines()[1], 'utf-8').split(':')[1]

    def getUnseen(self):
        try:
            obj = imaplib.IMAP4('msx.tu-dresden.de', 143)
        except gaierror:
            return '0'
        obj.starttls()
        obj.login(self.user, self.passwd)
        obj.select()
        return str(len(obj.search(None, 'UnSeen')[1][0].split()))

def main():
    fsr = FSR()
    tud = TUD()
    if fsr.getUnseen() == '0' and tud.getUnseen() == '0':
        print('')
    else:
        print('  FSR ' + fsr.getUnseen() + '    TUD ' + tud.getUnseen())

if __name__ == '__main__':
    main()
 
